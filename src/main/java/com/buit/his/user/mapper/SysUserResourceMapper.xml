<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 用户与资源对应关系 -->
<mapper namespace="com.buit.his.user.dao.SysUserResourceDao">

    <!-- 用于select查询公用抽取的列 -->
    <sql id="columns">
        USERRES_ID as userresId,DATA_VERSION as dataVersion,GMT_CREATE as gmtCreate,GMT_MODIFY as gmtModify,HOSPITAL_ID as hospitalId,USER_ID as userId,RESOURCE_ID as resourceId,RESOURCE_TYPE as resourceType
    </sql>

    <insert id="insert">
        INSERT INTO SYS_USER_RESOURCE (
            USERRES_ID ,
            DATA_VERSION ,
            GMT_CREATE ,
            GMT_MODIFY ,
            HOSPITAL_ID ,
            USER_ID ,
            RESOURCE_ID ,
            RESOURCE_TYPE 
        ) VALUES (
            #{userresId} ,
            1 ,
            #{gmtCreate} ,
            #{gmtCreate} ,
            #{hospitalId} ,
            #{userId} ,
            #{resourceId} ,
            #{resourceType} 
        )
    </insert>
    
    <update id="update" ><!--  
        UPDATE SYS_USER_RESOURCE SET
            DATA_VERSION = #{dataVersion} ,
            GMT_CREATE = #{gmtCreate} ,
            GMT_MODIFY = #{gmtModify} ,
            HOSPITAL_ID = #{hospitalId} ,
            USER_ID = #{userId} ,
            RESOURCE_ID = #{resourceId} ,
            RESOURCE_TYPE = #{resourceType} 
        WHERE 
            USERRES_ID = #{userresId} 
            -->            
    </update>

    <delete id="deleteById"><!-- 根据资源ID删除所有关联 -->
        DELETE FROM SYS_USER_RESOURCE WHERE
        RESOURCE_ID = #{resourceId}
    </delete>
    
    <delete id="removeByEntity">
        DELETE FROM SYS_USER_RESOURCE <include refid="where"/>  
    </delete>
    
    <select id="getById" resultType="SysUserResource">
        SELECT <include refid="columns" />
            FROM SYS_USER_RESOURCE 
            WHERE 
        USERRES_ID = #{userresId} 
    </select>
    
    <sql id="where">
        <where>                          
<!--                <if test="@sqlt.Ognl@isNotEmpty(userresId)"> -->
<!--                     AND USERRES_ID = #{userresId} -->
<!--                </if> -->
<!--                <if test="@sqlt.Ognl@isNotEmpty(hospitalId)"> -->
<!--                     AND HOSPITAL_ID = #{hospitalId} -->
<!--                </if> -->
               <if test="@sqlt.Ognl@isNotEmpty(userId)">
                    AND USER_ID = #{userId}
               </if>
               <if test="@sqlt.Ognl@isNotEmpty(resourceId)">
                    AND RESOURCE_ID = #{resourceId}
               </if>
               <if test="@sqlt.Ognl@isNotEmpty(resourceType)">
                    AND RESOURCE_TYPE = #{resourceType}
               </if>
        </where>
    </sql>
        
    <select id="findByEntityCount" resultType="long">
        SELECT count(*) FROM SYS_USER_RESOURCE 
        <include refid="where"/>    
    </select>
    
    <select id="findByEntity" resultType="SysUserResource">
        SELECT <include refid="columns" />
        FROM SYS_USER_RESOURCE 
        <include refid="where"/>
        
        <if test="@sqlt.Ognl@orderIsNotEmpty(sortColumns)">
            ORDER BY ${sortColumns}
        </if>
    </select>
    <!--     业务sql      -->
    <select id="getHospitaDic" resultType="HospitaDicResp">
        SELECT h.HOSPITAL_ID as hospitalId,h.HOSPITAL_NAME as hospitalName
        FROM SYS_USER_RESOURCE u LEFT JOIN  DIC_YLJG h  ON  u.HOSPITAL_ID =h.HOSPITAL_ID  
        WHERE u.USER_ID = #{value} and RESOURCE_TYPE='0'
    </select>
     <!--     取所有未授权用户列表      -->
    <select id="getNoAuthUser" resultType="SysUserAddResp">
    	SELECT USER_ID as userId,USER_NAME as userName,DEPT_ID as deptId,PY_CODE as pyCode,WB_CODE as wbCode FROM SYS_USER WHERE   not exists (select sys_user_resource.RESOURCE_ID  
    	from sys_user_resource 
    	where sys_user_resource.RESOURCE_ID =#{resourceId} and sys_user_resource.USER_ID = SYS_USER.USER_ID AND resource_type =#{resourceType} ) 
		and SYS_USER.HOSPITAL_ID = #{hospitalId}
    </select>
    <!--     取所有已授权用户列表      -->
    <select id="getAuthUser" resultType="SysUserAddResp">
    	SELECT USER_ID as userId,USER_NAME as userName,DEPT_ID as deptId,PY_CODE as pyCode,WB_CODE as wbCode 
    	FROM SYS_USER WHERE  exists (select sys_user_resource.RESOURCE_ID  from sys_user_resource 
    	where sys_user_resource.RESOURCE_ID =#{resourceId} and sys_user_resource.USER_ID = SYS_USER.USER_ID AND resource_type =#{resourceType} ) 
		and SYS_USER.HOSPITAL_ID = #{hospitalId}
    </select>
     
</mapper>

